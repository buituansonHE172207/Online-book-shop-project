@model ProductViewModel

@{
    ViewData["Title"] = "Product";
}

<style>
    .wrapper {
        display: flex;
    }
</style>

<h1 class="text-center pt-5">Update product</h1>

@if (ViewBag.Message != null)
{
    <div class="alert alert-danger" role="alert">@ViewBag.Message</div>
}



<div class="wrapper my-5 col-12">
    <div class="form-wrapper col-md-6">
        <form asp-action="Edit" id="productForm" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProductId" />

            <div class="form-group col-12">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group col-12">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Category"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group col-12">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group col-12">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group col-12">
                <label asp-for="Image" class="control-label"></label> (optional)
                <input asp-for="Image" id="uploadedImg" hidden />
                <input type="file" id="image" class="form-control" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group form-check ml-3">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Status" /> @Html.DisplayNameFor(model => model.Status)
                </label>
            </div>
            <div class="text-center">
                <button class="btn btn-primary col-md-4 mb-3" type="button" onclick="updateItem('@Model.Image')">Update</button>
                <div>
                    <a asp-action="Index">Back to List</a>
                </div>
            </div>
        </form>
    </div>
    <div class="image-wrapper col-md-4">
        <img src="@Model.Image" width="500" height="500"/>
    </div>
    
</div>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-storage.js"></script>

    <!-- TODO: Add SDKs for Firebase products that you want to use
         https://firebase.google.com/docs/web/setup#available-libraries -->
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-analytics.js"></script>

    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyAJrQ2G9NZaFKlN4U43kt-0_4DpAjGVzgc",
            authDomain: "clothshopping-6fd63.firebaseapp.com",
            projectId: "clothshopping-6fd63",
            storageBucket: "clothshopping-6fd63.appspot.com",
            messagingSenderId: "274541815825",
            appId: "1:274541815825:web:a973b0960ce601c60129b0",
            measurementId: "G-NZ69P8X0JT"
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        firebase.analytics();
    </script>
    <script>
        function updateItem(oldUrl) {
            const ref = firebase.storage().ref();
            const file = document.querySelector("#image").files[0];
            if (file != null) {
                const metadata = {
                    contentType: file.type
                };
                const name = file.name;
                const uploadIMG = ref.child(name).put(file, metadata);
                uploadIMG
                    .then(snapshot => snapshot.ref.getDownloadURL())
                    .then(url => {
                        $("#uploadedImg").val(url);
                        $("#productForm").submit();
                    })
                    .catch(console.error)
            } else {
                $("#uploadedImg").val(oldUrl);
                $("#productForm").submit();
            }
        }
    </script>
}
