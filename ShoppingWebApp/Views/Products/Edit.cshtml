@model ProductViewModel

@{
    ViewData["Title"] = "Product";
}

<style>
    .wrapper {
        display: flex;
    }
</style>

<h1 class="text-center pt-5">Update product</h1>

@if (ViewBag.Message != null)

{
    <div class="alert alert-danger" role="alert">@ViewBag.Message</div>
}



<div class="container my-5">
    <div class="row">
        <!-- Form -->
        <div class="col-12 col-md-6">
            <form asp-action="Edit" id="productForm" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="ProductId" />

                <div class="form-group">
                    <label asp-for="ProductName" class="control-label"></label>
                    <input asp-for="ProductName" class="form-control" />
                    <span asp-validation-for="ProductName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label"></label>
                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Category"></select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" class="form-control" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Image" class="control-label"></label> (optional)
                    <input asp-for="Image" id="uploadedImg" hidden />
                    <input type="file" id="image" class="form-control" />
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>
                <div class="form-group form-check ml-3">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Status" /> @Html.DisplayNameFor(model => model.Status)
                    </label>
                </div>
                <div class="text-center">
                    <button class="btn btn-primary col-md-4 mb-3" type="button"
                        onclick="updateItem('@Model.Image')">Update</button>
                    <div>
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                </div>
            </form>
        </div>

        <!-- Image -->
        <div class="col-12 col-md-6">
            <div class="text-center">
                <img src="@Model.Image" alt="Product Image" class="img-fluid" style="max-width: 100%;" />
            </div>
        </div>
    </div>
</div>





@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-storage.js"></script>
    <!-- Remove unnecessary Firebase libraries -->

    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyBTacUpNPM80k671JR_RWwukt069Jrj6b0",
            authDomain: "swift-habitat-399214.firebaseapp.com",
            projectId: "swift-habitat-399214",
            storageBucket: "swift-habitat-399214.appspot.com",
            messagingSenderId: "284624158623",
            appId: "1:284624158623:web:f2c08ebd7ea6f099ec07aa",
            measurementId: "G-HHQE8MNHW9"
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        firebase.analytics();
    </script>
    <script>
        function updateItem(oldUrl) {
            const ref = firebase.storage().ref();
            const file = document.querySelector("#image").files[0];
            if (file != null) {
                const metadata = {
                    contentType: file.type
                };
                const name = file.name;
                const uploadIMG = ref.child(name).put(file, metadata);
                uploadIMG
                    .then(snapshot => snapshot.ref.getDownloadURL())
                    .then(url => {
                        $("#uploadedImg").val(url);
                        $("#productForm").submit();
                    })
                    .catch(console.error)
            } else {
                $("#uploadedImg").val(oldUrl);
                $("#productForm").submit();
            }
        }
    </script>
}
